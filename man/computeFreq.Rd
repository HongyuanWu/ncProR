% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Freq.R
\name{computeFreq}
\alias{computeFreq}
\title{Computation of the K-Mer Frequencies of RNA or Protein Sequences}
\usage{
computeFreq(seqs, seqType = c("RNA", "Pro"), computePro = c("RPISeq",
  "DeNovo", "rpiCOOL"), k = 3, normalize = c("none", "row", "column"),
  normData = NULL, parallel.cores = 2)
}
\arguments{
\item{seqs}{sequences loaded by function \code{\link[seqinr]{read.fasta}} of package
"seqinr" (\code{\link[seqinr]{seqinr-package}}). Or a list of RNA/protein sequences.
RNA sequences will be converted into lower case letters, but
protein sequences will be converted into upper case letters.
Each sequence should be a vector of single characters.}

\item{seqType}{a string that specifies the nature of the sequence: \code{"RNA"} or \code{"Pro"} (protein).
If the input is DNA sequence and \code{seqType = "RNA"}, the DNA sequence will be converted to RNA sequence automatically.
Default: \code{"RNA"}.}

\item{computePro}{a string that specifies the computation mode of protein sequence: \code{"RPISeq"}, \code{"DeNovo"},
or \code{"rpiCOOL"}. Ignored when \code{seqType = "RNA"}.
Three modes indicate three different amino acid residues classifications that corresponds to the methods "RPISeq", "De Novo prediction",
and "rpiCOOL". See details below. Default: \code{"RPISeq"}.}

\item{k}{an integer that indicates the sliding window step. Default: \code{3}.}

\item{normalize}{can be \code{"none"}, \code{"row"} or \code{"column"}. If the frequencies should be normalized.
If normalize, should the features be normalized by row (each sequence) or by column (each feature)?
See details below. Default: \code{"none"}.}

\item{normData}{is the normalization data generated by this function.
Only used to extract features of test set and \code{normalize = "column"}.
If the input dataset is training set, or normalize strategy is \code{"none"} or \code{"row"},
just leave \code{normData = NULL}. The normalization data will be computed
based on the input dataset.}

\item{parallel.cores}{an integer specfying the number of cores for parallel computation. Default: \code{2}.
Set \code{parallel.cores = -1} to run with all the cores.}
}
\value{
This function returns a data frame. Row names are the sequences names, and column names are the polymer names.
If minimum and maximum values are computed, the function will return a list containing features (data frame) and normalization
values for the feature extraction of testing set.
}
\description{
This function can calculate the \emph{k}-mer frequencies of RNA or protein sequences.
Three kinds of protein representations are available.
}
\details{
Function \code{computeFreq} calculate the \emph{k}-mer frequencies of RNA/protein sequences. Three computation modes
of protein frequencies are:

\code{RPISeq}:
\{A, G, V\}, \{I, L, F, P\}, \{Y, M, T, S\}, \{H, N, Q, W\}, \{R, K\}, \{D, E\}, \{C\}
(Ref: [3]);

\code{DeNovo}:
\{D, E\}, \{H, R, K\}, \{C, G, N, Q, S, T, Y\}, \{A, F, I, L, M, P, V, W\}
(Ref: [4]).

\code{rpiCOOL}:
\{A, E\}, \{I, L, F, M, V\}, \{N, D, T, S\}, \{G\}, \{P\}, \{R, K, Q, H\}, \{Y, W\}, \{C\}
(Ref: [5]).

The function provides two normalization strategies: by row (each sequence) or by column (each feature).
If by row, the dataset will be processed with equation (Ref: [2]):
di = (fi - min\{f1, f2, ...\}) / max\{f1, f2, ...\}.
f1, f2, ..., fi are the original values of each row.

If by column, the dataset will be processed with:
di = (fi - min\{f1, f2, ...\}) / (max\{f1, f2, ...\} - min\{f1, f2, ...\}).

In [2], normalization is computed by row (each sequence).
}
\section{References}{

[1] Han S, Liang Y, Li Y, \emph{et al}.
ncProR: an integrated R package for effective ncRNA-protein interaction prediction.
(\emph{Submitted})

[2] Shen J, Zhang J, Luo X, \emph{et al}.
Predicting protein-protein interactions based only on sequences information.
Proc. Natl. Acad. Sci. U. S. A. 2007; 104:4337-41

[3] Muppirala UK, Honavar VG, Dobbs D.
Predicting RNA-protein interactions using only sequence information.
BMC Bioinformatics 2011; 12:489

[4] Wang Y, Chen X, Liu Z-P, \emph{et al}.
De novo prediction of RNA-protein interactions from sequence information.
Mol. BioSyst. 2013; 9:133-142

[5] Akbaripour-Elahabad M, Zahiri J, Rafeh R, \emph{et al}.
rpiCOOL: A tool for In Silico RNA-protein interaction detection using random forest.
J. Theor. Biol. 2016; 402:1-8
}

\examples{

### Use "read.fasta" function of package "seqinr" to read a FASTA file:
seqs1 <- seqinr::read.fasta(file =
"http://www.ncbi.nlm.nih.gov/WebSub/html/help/sample_files/nucleotide-sample.txt")
seqFreq1 <- computeFreq(seqs1, seqType = "RNA", k = 4, normalize = "none",
                        parallel.cores = 2)

data(demoPositiveSeq)
seqs2 <- demoPositiveSeq$Pro.positive

seqFreq2 <- computeFreq(seqs2, seqType = "Pro", computePro = "RPISeq", k = 3,
                        normalize = "column", parallel.cores = 2)

seqFreq3 <- computeFreq(seqs2, seqType = "Pro", computePro = "RPISeq", k = 3,
                        normalize = "column", normData = seqFreq2$normData,
                        parallel.cores = 2)

}
\seealso{
\code{\link{featureFreq}}
}
